apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: es-data-warm
  labels:
    component: elasticsearch
    role: data
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        component: elasticsearch
        role: data
    spec:
      containers:
      - name: es-data
        securityContext:
          privileged: true
          capabilities:
            add:
              - IPC_LOCK
        image: kayrus/docker-elasticsearch-kubernetes:5.2.2
        args:
        - /run.sh
        - -Epath.conf=/elasticsearch/config
        - -Enode.attr.box_type=warm
        # readinessProbe:
        #   tcpSocket:
        #     port: 9300
        #   timeoutSeconds: 1
        #   successThreshold: 3
        # imagePullPolicy: Always
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: es-env
              key: es-cluster-name
        - name: NODE_MASTER
          value: 'false'
        - name: NODE_DATA
          value: 'true'
        - name: HTTP_ENABLE
          value: 'false'
        - name: ES_JAVA_OPTS
          valueFrom:
            configMapKeyRef:
              name: es-env
              key: es-data-java-opts
        - name: ES_CLIENT_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: es-env
              key: es-client-endpoint
        - name: ES_PERSISTENT
          valueFrom:
            configMapKeyRef:
              name: es-env
              key: es-persistent-storage
        ports:
        - name: transport
          containerPort: 9300
          protocol: TCP
        # Random hostPort to prevent multiple ES data instances on one node
        - name: dummy
          containerPort: 28651
          protocol: TCP
          hostPort: 28651
        volumeMounts:
        - name: storage
          mountPath: /data
      terminationGracePeriodSeconds: 30
      volumes:
      - name: storage
        emptyDir: {}
